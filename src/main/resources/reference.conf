# defaults are used if they are not overriden by a branch config
defaults {
  # prefix for tags in git
  prefix: v
  # whether to really tag the branch when `git mkver tag` is called
  tag: false
  # message for annotated version tags in git
  tagMessageFormat: "release {tag}"
  # format string to be used for the tag in git
  # the git tag must be a valid SemVer so the tag format must be one of:
  # Version | VersionPreRelease | VersionBuildMetaData | VersionPreReleaseBuildMetaData
  tagFormat: VersionBuildMetaData
  # list of patches to be applied when `git mkver patch` is called
  patches: [
    # e.g. Helm
  ]
  # list of formats
  formats: [
    {
      name: BuildMetaData
      format: "{br}.{sh}"
    }
    {
      name: Docker
      format: "{Version}"
    }
    {
      name: DockerBranch
      format: "{Version}.{br}.{sh}"
    }
  ]
}
# branch specific overrides of the default config
# name is a regular expression
# branches are tried for matches in order
branches: [
  {
    name: "master"
    tag: true
    tagFormat: Version
  }
]
# patches control how files are updated
patches: [
  {
    name: HelmChart
    filePatterns: ["**/Chart.yaml"]
    find: "appVersion: .*"
    replace: "appVersion: \"{Version}\""
  }
  {
    name: Csproj
    filePatterns: ["**/*.csproj"]
    find: "<Version>.*</Version>"
    replace: "<Version>{Version}</Version>"
  }
]
